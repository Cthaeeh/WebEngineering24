// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebDbApp.Data;

#nullable disable

namespace MyWebDbApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240717113753_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "defaf00d-ec55-4dbd-b6aa-db0b5f8c21cf",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "54549a05-4a44-4e26-b35a-c721f6449ce7",
                            Name = "Office",
                            NormalizedName = "OFFICE"
                        },
                        new
                        {
                            Id = "e69a50ee-4516-452f-bfc4-56a77857cb79",
                            Name = "Worker",
                            NormalizedName = "WORKER"
                        },
                        new
                        {
                            Id = "f7cbcac9-b72b-4811-b030-f87ce96ccb72",
                            Name = "Chief",
                            NormalizedName = "CHIEF"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "5242b050-5828-4745-b328-969580b5297c",
                            RoleId = "defaf00d-ec55-4dbd-b6aa-db0b5f8c21cf"
                        },
                        new
                        {
                            UserId = "608f8222-bf54-4aff-8e0f-1847436f1b9a",
                            RoleId = "54549a05-4a44-4e26-b35a-c721f6449ce7"
                        },
                        new
                        {
                            UserId = "596622ba-fb8a-4562-9da0-279e5038438c",
                            RoleId = "54549a05-4a44-4e26-b35a-c721f6449ce7"
                        },
                        new
                        {
                            UserId = "238d10fb-5797-4740-9daa-ef912edaea71",
                            RoleId = "e69a50ee-4516-452f-bfc4-56a77857cb79"
                        },
                        new
                        {
                            UserId = "3cff055f-7215-41ce-8728-1b6bdeb1d993",
                            RoleId = "f7cbcac9-b72b-4811-b030-f87ce96ccb72"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MyWebDbApp.Areas.Identity.Data.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "5242b050-5828-4745-b328-969580b5297c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "68c921f2-f300-47a3-aa7c-a97ee0908d50",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN@ABC.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJz8EyuR4BRIg+qspgyeDD+nJXAmScm4roOFNUBa19d3OM0OIBcrAorR8+jITRaCFw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4b201c77-0bc4-4ede-8b93-9a4266104602",
                            TwoFactorEnabled = false,
                            UserName = "admin@abc.com"
                        },
                        new
                        {
                            Id = "608f8222-bf54-4aff-8e0f-1847436f1b9a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "51592267-b1ff-4033-8597-a5e996004ef0",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "OFFICE1@ABC.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEB9myKhrf3sYrskVQRWz6aNwjqbDuaxvPO3dGAChSop/LuPfp6soBn6w7P4HFqrkhg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9d20ecea-ceb0-4138-a745-00cb858eaa83",
                            TwoFactorEnabled = false,
                            UserName = "office1@abc.com"
                        },
                        new
                        {
                            Id = "596622ba-fb8a-4562-9da0-279e5038438c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9120de21-1f9c-494a-b796-d483c0507a45",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "OFFICE2@ABC.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELdG4EC+Yc9B+f/3HXjo5R9cI75q4hBOMQVmAPYNE9DQ3AfoUNKKVJ5p4zmxx6cqIA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "465c1c2c-60d9-4250-8af9-031eb6237ede",
                            TwoFactorEnabled = false,
                            UserName = "office2@abc.com"
                        },
                        new
                        {
                            Id = "238d10fb-5797-4740-9daa-ef912edaea71",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "41209bab-b50c-4a5c-b781-ccf43e390d44",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "WORKER@ABC.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELV7uxhPCJ1l6nFKxtCbBje22rzQhbVWsYsa8SG/pWm9JTtlqP+4AgOnp2ljOLxPxQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f4cbe535-1982-42dd-b231-5f0075fe9749",
                            TwoFactorEnabled = false,
                            UserName = "worker@abc.com"
                        },
                        new
                        {
                            Id = "3cff055f-7215-41ce-8728-1b6bdeb1d993",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0ca8a13d-fcd9-4925-afaf-ba0e2fb32746",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "CHIEF@ABC.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJT/T5noTU7+zZO0uZKfZeThOv5bhijlYIPur3lihGcUvFOHmPu09Wnt0Ba2ck7eZQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dbdeefc8-9772-4e1e-9bb7-f06ab616e8a0",
                            TwoFactorEnabled = false,
                            UserName = "chief@abc.com"
                        });
                });

            modelBuilder.Entity("MyWebDbApp.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChiefId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChiefId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkspaceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("Equipment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Desk",
                            WorkspaceId = 1
                        },
                        new
                        {
                            Id = 31,
                            Name = "Chair",
                            WorkspaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Desk",
                            WorkspaceId = 2
                        },
                        new
                        {
                            Id = 32,
                            Name = "Chair",
                            WorkspaceId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Desk",
                            WorkspaceId = 3
                        },
                        new
                        {
                            Id = 33,
                            Name = "Chair",
                            WorkspaceId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Desk",
                            WorkspaceId = 4
                        },
                        new
                        {
                            Id = 34,
                            Name = "Chair",
                            WorkspaceId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Desk",
                            WorkspaceId = 5
                        },
                        new
                        {
                            Id = 35,
                            Name = "Chair",
                            WorkspaceId = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Desk",
                            WorkspaceId = 6
                        },
                        new
                        {
                            Id = 36,
                            Name = "Chair",
                            WorkspaceId = 6
                        },
                        new
                        {
                            Id = 7,
                            Name = "Desk",
                            WorkspaceId = 7
                        },
                        new
                        {
                            Id = 37,
                            Name = "Chair",
                            WorkspaceId = 7
                        },
                        new
                        {
                            Id = 8,
                            Name = "Desk",
                            WorkspaceId = 8
                        },
                        new
                        {
                            Id = 38,
                            Name = "Chair",
                            WorkspaceId = 8
                        },
                        new
                        {
                            Id = 9,
                            Name = "Desk",
                            WorkspaceId = 9
                        },
                        new
                        {
                            Id = 39,
                            Name = "Chair",
                            WorkspaceId = 9
                        },
                        new
                        {
                            Id = 10,
                            Name = "Desk",
                            WorkspaceId = 10
                        },
                        new
                        {
                            Id = 40,
                            Name = "Chair",
                            WorkspaceId = 10
                        },
                        new
                        {
                            Id = 11,
                            Name = "Desk",
                            WorkspaceId = 11
                        },
                        new
                        {
                            Id = 41,
                            Name = "Chair",
                            WorkspaceId = 11
                        },
                        new
                        {
                            Id = 12,
                            Name = "Desk",
                            WorkspaceId = 12
                        },
                        new
                        {
                            Id = 42,
                            Name = "Chair",
                            WorkspaceId = 12
                        },
                        new
                        {
                            Id = 13,
                            Name = "Desk",
                            WorkspaceId = 13
                        },
                        new
                        {
                            Id = 43,
                            Name = "Chair",
                            WorkspaceId = 13
                        },
                        new
                        {
                            Id = 14,
                            Name = "Desk",
                            WorkspaceId = 14
                        },
                        new
                        {
                            Id = 44,
                            Name = "Chair",
                            WorkspaceId = 14
                        },
                        new
                        {
                            Id = 15,
                            Name = "Desk",
                            WorkspaceId = 15
                        },
                        new
                        {
                            Id = 45,
                            Name = "Chair",
                            WorkspaceId = 15
                        },
                        new
                        {
                            Id = 16,
                            Name = "Desk",
                            WorkspaceId = 16
                        },
                        new
                        {
                            Id = 46,
                            Name = "Chair",
                            WorkspaceId = 16
                        },
                        new
                        {
                            Id = 17,
                            Name = "Desk",
                            WorkspaceId = 17
                        },
                        new
                        {
                            Id = 47,
                            Name = "Chair",
                            WorkspaceId = 17
                        },
                        new
                        {
                            Id = 18,
                            Name = "Desk",
                            WorkspaceId = 18
                        },
                        new
                        {
                            Id = 48,
                            Name = "Chair",
                            WorkspaceId = 18
                        },
                        new
                        {
                            Id = 19,
                            Name = "Desk",
                            WorkspaceId = 19
                        },
                        new
                        {
                            Id = 49,
                            Name = "Chair",
                            WorkspaceId = 19
                        },
                        new
                        {
                            Id = 20,
                            Name = "Desk",
                            WorkspaceId = 20
                        },
                        new
                        {
                            Id = 50,
                            Name = "Chair",
                            WorkspaceId = 20
                        },
                        new
                        {
                            Id = 21,
                            Name = "Desk",
                            WorkspaceId = 21
                        },
                        new
                        {
                            Id = 51,
                            Name = "Chair",
                            WorkspaceId = 21
                        },
                        new
                        {
                            Id = 22,
                            Name = "Desk",
                            WorkspaceId = 22
                        },
                        new
                        {
                            Id = 52,
                            Name = "Chair",
                            WorkspaceId = 22
                        },
                        new
                        {
                            Id = 23,
                            Name = "Desk",
                            WorkspaceId = 23
                        },
                        new
                        {
                            Id = 53,
                            Name = "Chair",
                            WorkspaceId = 23
                        },
                        new
                        {
                            Id = 24,
                            Name = "Desk",
                            WorkspaceId = 24
                        },
                        new
                        {
                            Id = 54,
                            Name = "Chair",
                            WorkspaceId = 24
                        },
                        new
                        {
                            Id = 25,
                            Name = "Desk",
                            WorkspaceId = 25
                        },
                        new
                        {
                            Id = 55,
                            Name = "Chair",
                            WorkspaceId = 25
                        },
                        new
                        {
                            Id = 26,
                            Name = "Desk",
                            WorkspaceId = 26
                        },
                        new
                        {
                            Id = 56,
                            Name = "Chair",
                            WorkspaceId = 26
                        },
                        new
                        {
                            Id = 27,
                            Name = "Desk",
                            WorkspaceId = 27
                        },
                        new
                        {
                            Id = 57,
                            Name = "Chair",
                            WorkspaceId = 27
                        },
                        new
                        {
                            Id = 28,
                            Name = "Desk",
                            WorkspaceId = 28
                        },
                        new
                        {
                            Id = 58,
                            Name = "Chair",
                            WorkspaceId = 28
                        },
                        new
                        {
                            Id = 29,
                            Name = "Desk",
                            WorkspaceId = 29
                        },
                        new
                        {
                            Id = 59,
                            Name = "Chair",
                            WorkspaceId = 29
                        },
                        new
                        {
                            Id = 30,
                            Name = "Desk",
                            WorkspaceId = 30
                        },
                        new
                        {
                            Id = 60,
                            Name = "Chair",
                            WorkspaceId = 30
                        });
                });

            modelBuilder.Entity("MyWebDbApp.Models.Occupancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("WorkspaceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("Occupancies");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Room 1",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Room 2",
                            Type = 5
                        },
                        new
                        {
                            Id = 3,
                            Name = "Room 3",
                            Type = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Room 4",
                            Type = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Room 5",
                            Type = 4
                        },
                        new
                        {
                            Id = 6,
                            Name = "Room 6",
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Room 7",
                            Type = 0
                        },
                        new
                        {
                            Id = 8,
                            Name = "Room 8",
                            Type = 5
                        },
                        new
                        {
                            Id = 9,
                            Name = "Room 9",
                            Type = 2
                        },
                        new
                        {
                            Id = 10,
                            Name = "Room 10",
                            Type = 3
                        });
                });

            modelBuilder.Entity("MyWebDbApp.Models.Workspace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Workspaces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Workspace 1",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 2,
                            Name = "Workspace 2",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 3,
                            Name = "Workspace 3",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 4,
                            Name = "Workspace 4",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 5,
                            Name = "Workspace 5",
                            RoomId = 6
                        },
                        new
                        {
                            Id = 6,
                            Name = "Workspace 6",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 7,
                            Name = "Workspace 7",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 8,
                            Name = "Workspace 8",
                            RoomId = 9
                        },
                        new
                        {
                            Id = 9,
                            Name = "Workspace 9",
                            RoomId = 10
                        },
                        new
                        {
                            Id = 10,
                            Name = "Workspace 10",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 11,
                            Name = "Workspace 11",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 12,
                            Name = "Workspace 12",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 13,
                            Name = "Workspace 13",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 14,
                            Name = "Workspace 14",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 15,
                            Name = "Workspace 15",
                            RoomId = 6
                        },
                        new
                        {
                            Id = 16,
                            Name = "Workspace 16",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 17,
                            Name = "Workspace 17",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 18,
                            Name = "Workspace 18",
                            RoomId = 9
                        },
                        new
                        {
                            Id = 19,
                            Name = "Workspace 19",
                            RoomId = 10
                        },
                        new
                        {
                            Id = 20,
                            Name = "Workspace 20",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 21,
                            Name = "Workspace 21",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 22,
                            Name = "Workspace 22",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 23,
                            Name = "Workspace 23",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 24,
                            Name = "Workspace 24",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 25,
                            Name = "Workspace 25",
                            RoomId = 6
                        },
                        new
                        {
                            Id = 26,
                            Name = "Workspace 26",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 27,
                            Name = "Workspace 27",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 28,
                            Name = "Workspace 28",
                            RoomId = 9
                        },
                        new
                        {
                            Id = 29,
                            Name = "Workspace 29",
                            RoomId = 10
                        },
                        new
                        {
                            Id = 30,
                            Name = "Workspace 30",
                            RoomId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MyWebDbApp.Areas.Identity.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MyWebDbApp.Areas.Identity.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWebDbApp.Areas.Identity.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MyWebDbApp.Areas.Identity.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyWebDbApp.Models.Department", b =>
                {
                    b.HasOne("MyWebDbApp.Areas.Identity.Data.AppUser", "Chief")
                        .WithMany()
                        .HasForeignKey("ChiefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chief");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Employee", b =>
                {
                    b.HasOne("MyWebDbApp.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Equipment", b =>
                {
                    b.HasOne("MyWebDbApp.Models.Workspace", "Workspace")
                        .WithMany("Equipment")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Occupancy", b =>
                {
                    b.HasOne("MyWebDbApp.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("MyWebDbApp.Models.Room", "Room")
                        .WithMany("Occupancies")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MyWebDbApp.Areas.Identity.Data.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("MyWebDbApp.Models.Workspace", null)
                        .WithMany("Occupancies")
                        .HasForeignKey("WorkspaceId");

                    b.Navigation("Employee");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Workspace", b =>
                {
                    b.HasOne("MyWebDbApp.Models.Room", "Room")
                        .WithMany("Workspaces")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Room", b =>
                {
                    b.Navigation("Occupancies");

                    b.Navigation("Workspaces");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Workspace", b =>
                {
                    b.Navigation("Equipment");

                    b.Navigation("Occupancies");
                });
#pragma warning restore 612, 618
        }
    }
}
