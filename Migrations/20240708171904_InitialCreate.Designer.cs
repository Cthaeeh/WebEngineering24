// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebDbApp.Data;

#nullable disable

namespace MyWebDbApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240708171904_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.12");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0737abe6-756f-4db2-86bb-1dfbaa014a0c",
                            ConcurrencyStamp = "c28113c2-dac3-4601-ba7e-37ff734624af",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "d8ced9ff-085a-4c1d-963b-aa334abc0523",
                            ConcurrencyStamp = "e3ff23f7-233a-42aa-b323-159ba95579d6",
                            Name = "Office",
                            NormalizedName = "OFFICE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "0c2c76d8-c2c0-4bb6-a832-891840f81cae",
                            RoleId = "0737abe6-756f-4db2-86bb-1dfbaa014a0c"
                        },
                        new
                        {
                            UserId = "09737434-c187-4754-8479-56309d53951c",
                            RoleId = "d8ced9ff-085a-4c1d-963b-aa334abc0523"
                        },
                        new
                        {
                            UserId = "687af411-69d1-462d-9aff-2e7a707f8cd8",
                            RoleId = "d8ced9ff-085a-4c1d-963b-aa334abc0523"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MyWebDbApp.Areas.Identity.Data.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0c2c76d8-c2c0-4bb6-a832-891840f81cae",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b97ab01a-aaee-4c2b-9301-1e6e8e797b07",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN@ABC.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEADSOQSDDNAn+GwRUphH//kQyqdy/9vFHptaROtXsGZvyO8HWoYXfzmaEuv0GtcGkw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "aeb321b2-f94d-417c-b9cb-9d62853e8cd8",
                            TwoFactorEnabled = false,
                            UserName = "admin@abc.com"
                        },
                        new
                        {
                            Id = "09737434-c187-4754-8479-56309d53951c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1681e323-9d39-4f80-96f1-524da75e9452",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "OFFICE1@ABC.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENssQMc2Z90aCkFs77mhB83cGUu+WOwSx+Cmrj0Auy0HZHYskZLWuO6qP02yhMAxvA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "debd0ef8-6328-4cb8-a3c1-8212bbde185b",
                            TwoFactorEnabled = false,
                            UserName = "office1@abc.com"
                        },
                        new
                        {
                            Id = "687af411-69d1-462d-9aff-2e7a707f8cd8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aed0f250-4d0f-4a38-ae93-e32954890623",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "OFFICE2@ABC.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOiEjgCXgqzH2l60T0F7Qd6NpBejYRHWOS7TrcWtxZ2r+e45CAzxs0rwsQ+ccO4QRg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9323ba88-9f17-4975-96b1-dd1e5878363a",
                            TwoFactorEnabled = false,
                            UserName = "office2@abc.com"
                        });
                });

            modelBuilder.Entity("MyWebDbApp.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ShareBonds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShareStocks")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChiefId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChiefId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkspaceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("Equipment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Desk",
                            WorkspaceId = 1
                        },
                        new
                        {
                            Id = 31,
                            Name = "Chair",
                            WorkspaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Desk",
                            WorkspaceId = 2
                        },
                        new
                        {
                            Id = 32,
                            Name = "Chair",
                            WorkspaceId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Desk",
                            WorkspaceId = 3
                        },
                        new
                        {
                            Id = 33,
                            Name = "Chair",
                            WorkspaceId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Desk",
                            WorkspaceId = 4
                        },
                        new
                        {
                            Id = 34,
                            Name = "Chair",
                            WorkspaceId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Desk",
                            WorkspaceId = 5
                        },
                        new
                        {
                            Id = 35,
                            Name = "Chair",
                            WorkspaceId = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Desk",
                            WorkspaceId = 6
                        },
                        new
                        {
                            Id = 36,
                            Name = "Chair",
                            WorkspaceId = 6
                        },
                        new
                        {
                            Id = 7,
                            Name = "Desk",
                            WorkspaceId = 7
                        },
                        new
                        {
                            Id = 37,
                            Name = "Chair",
                            WorkspaceId = 7
                        },
                        new
                        {
                            Id = 8,
                            Name = "Desk",
                            WorkspaceId = 8
                        },
                        new
                        {
                            Id = 38,
                            Name = "Chair",
                            WorkspaceId = 8
                        },
                        new
                        {
                            Id = 9,
                            Name = "Desk",
                            WorkspaceId = 9
                        },
                        new
                        {
                            Id = 39,
                            Name = "Chair",
                            WorkspaceId = 9
                        },
                        new
                        {
                            Id = 10,
                            Name = "Desk",
                            WorkspaceId = 10
                        },
                        new
                        {
                            Id = 40,
                            Name = "Chair",
                            WorkspaceId = 10
                        },
                        new
                        {
                            Id = 11,
                            Name = "Desk",
                            WorkspaceId = 11
                        },
                        new
                        {
                            Id = 41,
                            Name = "Chair",
                            WorkspaceId = 11
                        },
                        new
                        {
                            Id = 12,
                            Name = "Desk",
                            WorkspaceId = 12
                        },
                        new
                        {
                            Id = 42,
                            Name = "Chair",
                            WorkspaceId = 12
                        },
                        new
                        {
                            Id = 13,
                            Name = "Desk",
                            WorkspaceId = 13
                        },
                        new
                        {
                            Id = 43,
                            Name = "Chair",
                            WorkspaceId = 13
                        },
                        new
                        {
                            Id = 14,
                            Name = "Desk",
                            WorkspaceId = 14
                        },
                        new
                        {
                            Id = 44,
                            Name = "Chair",
                            WorkspaceId = 14
                        },
                        new
                        {
                            Id = 15,
                            Name = "Desk",
                            WorkspaceId = 15
                        },
                        new
                        {
                            Id = 45,
                            Name = "Chair",
                            WorkspaceId = 15
                        },
                        new
                        {
                            Id = 16,
                            Name = "Desk",
                            WorkspaceId = 16
                        },
                        new
                        {
                            Id = 46,
                            Name = "Chair",
                            WorkspaceId = 16
                        },
                        new
                        {
                            Id = 17,
                            Name = "Desk",
                            WorkspaceId = 17
                        },
                        new
                        {
                            Id = 47,
                            Name = "Chair",
                            WorkspaceId = 17
                        },
                        new
                        {
                            Id = 18,
                            Name = "Desk",
                            WorkspaceId = 18
                        },
                        new
                        {
                            Id = 48,
                            Name = "Chair",
                            WorkspaceId = 18
                        },
                        new
                        {
                            Id = 19,
                            Name = "Desk",
                            WorkspaceId = 19
                        },
                        new
                        {
                            Id = 49,
                            Name = "Chair",
                            WorkspaceId = 19
                        },
                        new
                        {
                            Id = 20,
                            Name = "Desk",
                            WorkspaceId = 20
                        },
                        new
                        {
                            Id = 50,
                            Name = "Chair",
                            WorkspaceId = 20
                        },
                        new
                        {
                            Id = 21,
                            Name = "Desk",
                            WorkspaceId = 21
                        },
                        new
                        {
                            Id = 51,
                            Name = "Chair",
                            WorkspaceId = 21
                        },
                        new
                        {
                            Id = 22,
                            Name = "Desk",
                            WorkspaceId = 22
                        },
                        new
                        {
                            Id = 52,
                            Name = "Chair",
                            WorkspaceId = 22
                        },
                        new
                        {
                            Id = 23,
                            Name = "Desk",
                            WorkspaceId = 23
                        },
                        new
                        {
                            Id = 53,
                            Name = "Chair",
                            WorkspaceId = 23
                        },
                        new
                        {
                            Id = 24,
                            Name = "Desk",
                            WorkspaceId = 24
                        },
                        new
                        {
                            Id = 54,
                            Name = "Chair",
                            WorkspaceId = 24
                        },
                        new
                        {
                            Id = 25,
                            Name = "Desk",
                            WorkspaceId = 25
                        },
                        new
                        {
                            Id = 55,
                            Name = "Chair",
                            WorkspaceId = 25
                        },
                        new
                        {
                            Id = 26,
                            Name = "Desk",
                            WorkspaceId = 26
                        },
                        new
                        {
                            Id = 56,
                            Name = "Chair",
                            WorkspaceId = 26
                        },
                        new
                        {
                            Id = 27,
                            Name = "Desk",
                            WorkspaceId = 27
                        },
                        new
                        {
                            Id = 57,
                            Name = "Chair",
                            WorkspaceId = 27
                        },
                        new
                        {
                            Id = 28,
                            Name = "Desk",
                            WorkspaceId = 28
                        },
                        new
                        {
                            Id = 58,
                            Name = "Chair",
                            WorkspaceId = 28
                        },
                        new
                        {
                            Id = 29,
                            Name = "Desk",
                            WorkspaceId = 29
                        },
                        new
                        {
                            Id = 59,
                            Name = "Chair",
                            WorkspaceId = 29
                        },
                        new
                        {
                            Id = 30,
                            Name = "Desk",
                            WorkspaceId = 30
                        },
                        new
                        {
                            Id = 60,
                            Name = "Chair",
                            WorkspaceId = 30
                        });
                });

            modelBuilder.Entity("MyWebDbApp.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Room 1",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Room 2",
                            Type = 5
                        },
                        new
                        {
                            Id = 3,
                            Name = "Room 3",
                            Type = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Room 4",
                            Type = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Room 5",
                            Type = 4
                        },
                        new
                        {
                            Id = 6,
                            Name = "Room 6",
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Room 7",
                            Type = 0
                        },
                        new
                        {
                            Id = 8,
                            Name = "Room 8",
                            Type = 5
                        },
                        new
                        {
                            Id = 9,
                            Name = "Room 9",
                            Type = 2
                        },
                        new
                        {
                            Id = 10,
                            Name = "Room 10",
                            Type = 3
                        });
                });

            modelBuilder.Entity("MyWebDbApp.Models.Workspace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Workspaces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Workspace 1",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 2,
                            Name = "Workspace 2",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 3,
                            Name = "Workspace 3",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 4,
                            Name = "Workspace 4",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 5,
                            Name = "Workspace 5",
                            RoomId = 6
                        },
                        new
                        {
                            Id = 6,
                            Name = "Workspace 6",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 7,
                            Name = "Workspace 7",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 8,
                            Name = "Workspace 8",
                            RoomId = 9
                        },
                        new
                        {
                            Id = 9,
                            Name = "Workspace 9",
                            RoomId = 10
                        },
                        new
                        {
                            Id = 10,
                            Name = "Workspace 10",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 11,
                            Name = "Workspace 11",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 12,
                            Name = "Workspace 12",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 13,
                            Name = "Workspace 13",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 14,
                            Name = "Workspace 14",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 15,
                            Name = "Workspace 15",
                            RoomId = 6
                        },
                        new
                        {
                            Id = 16,
                            Name = "Workspace 16",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 17,
                            Name = "Workspace 17",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 18,
                            Name = "Workspace 18",
                            RoomId = 9
                        },
                        new
                        {
                            Id = 19,
                            Name = "Workspace 19",
                            RoomId = 10
                        },
                        new
                        {
                            Id = 20,
                            Name = "Workspace 20",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 21,
                            Name = "Workspace 21",
                            RoomId = 2
                        },
                        new
                        {
                            Id = 22,
                            Name = "Workspace 22",
                            RoomId = 3
                        },
                        new
                        {
                            Id = 23,
                            Name = "Workspace 23",
                            RoomId = 4
                        },
                        new
                        {
                            Id = 24,
                            Name = "Workspace 24",
                            RoomId = 5
                        },
                        new
                        {
                            Id = 25,
                            Name = "Workspace 25",
                            RoomId = 6
                        },
                        new
                        {
                            Id = 26,
                            Name = "Workspace 26",
                            RoomId = 7
                        },
                        new
                        {
                            Id = 27,
                            Name = "Workspace 27",
                            RoomId = 8
                        },
                        new
                        {
                            Id = 28,
                            Name = "Workspace 28",
                            RoomId = 9
                        },
                        new
                        {
                            Id = 29,
                            Name = "Workspace 29",
                            RoomId = 10
                        },
                        new
                        {
                            Id = 30,
                            Name = "Workspace 30",
                            RoomId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MyWebDbApp.Areas.Identity.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MyWebDbApp.Areas.Identity.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWebDbApp.Areas.Identity.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MyWebDbApp.Areas.Identity.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyWebDbApp.Models.Department", b =>
                {
                    b.HasOne("MyWebDbApp.Areas.Identity.Data.AppUser", "Chief")
                        .WithMany()
                        .HasForeignKey("ChiefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chief");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Equipment", b =>
                {
                    b.HasOne("MyWebDbApp.Models.Workspace", "Workspace")
                        .WithMany("Equipment")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Workspace", b =>
                {
                    b.HasOne("MyWebDbApp.Models.Room", "Room")
                        .WithMany("Workspaces")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Room", b =>
                {
                    b.Navigation("Workspaces");
                });

            modelBuilder.Entity("MyWebDbApp.Models.Workspace", b =>
                {
                    b.Navigation("Equipment");
                });
#pragma warning restore 612, 618
        }
    }
}
